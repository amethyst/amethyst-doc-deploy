var searchIndex = JSON.parse('{\
"amethyst":{"doc":"Amethyst is a free and open source game engine written in …","i":[[0,"prelude","amethyst","Contains common types that can be glob-imported (<code>*</code>) for …",null,null],[6,"Application","amethyst::prelude","An Application is the root object of the game engine. It …",null,null],[3,"ApplicationBuilder","","<code>ApplicationBuilder</code> is an interface that allows for …",null,null],[12,"world","","Used by bundles to access the world directly",0,null],[3,"CoreApplication","","<code>CoreApplication</code> is the application implementation for the …",null,null],[6,"Callback","","The type of a callback. This is meant to be created from …",null,null],[3,"CallbackQueue","","A simple <code>Callback</code> queue. Using the <code>Sender</code> you can get …",null,null],[8,"Config","","Trait implemented by the <code>config!</code> macro.",null,null],[10,"load","","Loads a configuration structure from a file.",1,[[],[["configerror",4],["result",4]]]],[11,"load_no_fallback","","Loads a configuration structure from a file.",1,[[],[["configerror",4],["result",4]]]],[10,"load_bytes","","Loads configuration structure from raw bytes.",1,[[],[["configerror",4],["result",4]]]],[10,"write","","Writes a configuration structure to a file.",1,[[],[["configerror",4],["result",4]]]],[8,"SystemDesc","","Initializes a <code>System</code> with some interaction with the <code>World</code>.",null,null],[10,"build","","Builds and returns a <code>System</code>.",2,[[["world",3]]]],[8,"SystemExt","","Extension functionality associated systems.",null,null],[10,"pausable","","Make a system pausable by tying it to a specific value of …",3,[[],["pausable",3]]],[8,"WithNamed","","An easy way to name an <code>Entity</code> and give it a <code>Named</code> …",null,null],[10,"named","","Adds a name to the entity being built.",4,[[]]],[8,"Builder","","A common trait for <code>EntityBuilder</code> and <code>LazyBuilder</code>, …",null,null],[10,"with","","Appends a component and associates it with the entity.",5,[[]]],[10,"build","","Finishes the building and returns the entity.",5,[[],["entity",3]]],[3,"World","","A [Resource] container, which provides methods to insert, …",null,null],[8,"WorldExt","","This trait provides some extension methods to make …",null,null],[10,"new","","Constructs a new World instance.",6,[[]]],[10,"register","","Registers a new component, adding the component storage.",6,[[]]],[10,"register_with_storage","","Registers a new component with a given storage.",6,[[]]],[10,"add_resource","","Adds a resource to the world.",6,[[]]],[10,"read_component","","Fetches a component storage for reading.",6,[[],[["storage",3],["fetch",3]]]],[10,"write_component","","Fetches a component storage for writing.",6,[[],[["fetchmut",3],["storage",3]]]],[11,"read_storage","","Fetches a component storage for reading.",6,[[],[["storage",3],["fetch",3]]]],[11,"write_storage","","Fetches a component storage for writing.",6,[[],[["fetchmut",3],["storage",3]]]],[10,"read_resource","","Fetches a resource for reading.",6,[[],["fetch",3]]],[10,"write_resource","","Fetches a resource for writing.",6,[[],["fetchmut",3]]],[10,"entities","","Convenience method for fetching entities.",6,[[],[["entitiesres",3],["read",3],["defaultprovider",3]]]],[10,"entities_mut","","Convenience method for fetching entities.",6,[[],[["entitiesres",3],["fetchmut",3]]]],[10,"create_entity","","Allows building an entity with its components.",6,[[],["entitybuilder",3]]],[10,"create_entity_unchecked","","Allows building an entity with its components.",6,[[],["entitybuilder",3]]],[10,"create_iter","","Returns an iterator for entity creation. This makes it …",6,[[],["createiter",3]]],[10,"delete_entity","","Deletes an entity and its components.",6,[[["entity",3]],[["result",4],["wronggeneration",3]]]],[10,"delete_entities","","Deletes the specified entities and their components.",6,[[],[["result",4],["wronggeneration",3]]]],[10,"delete_all","","Deletes all entities and their components.",6,[[]]],[10,"is_alive","","Checks if an entity is alive. Please note that atomically …",6,[[["entity",3]],["bool",15]]],[10,"maintain","","Merges in the appendix, recording all the dynamically …",6,[[]]],[8,"DataInit","","Initialise trait for game data",null,null],[10,"build","","Build game data",7,[[["world",3]]]],[3,"GameData","","Default game data.",null,null],[3,"GameDataBuilder","","Builder for default game data",null,null],[8,"EmptyState","","An empty <code>State</code> trait. It contains no <code>StateData</code> or custom …",null,null],[11,"on_start","","Executed when the game state begins.",8,[[["statedata",3]]]],[11,"on_stop","","Executed when the game state exits.",8,[[["statedata",3]]]],[11,"on_pause","","Executed when a different game state is pushed onto the …",8,[[["statedata",3]]]],[11,"on_resume","","Executed when the application returns to this game state …",8,[[["statedata",3]]]],[11,"handle_event","","Executed on every frame before updating, for use in …",8,[[["statedata",3],["stateevent",4]],["emptytrans",6]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals …",8,[[["statedata",3]],["emptytrans",6]]],[11,"update","","Executed on every frame immediately, as fast as the …",8,[[["statedata",3]],["emptytrans",6]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals …",8,[[["statedata",3]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the …",8,[[["statedata",3]]]],[6,"EmptyTrans","","An empty <code>Trans</code>. Made to be used with <code>EmptyState</code>.",null,null],[8,"SimpleState","","A simple <code>State</code> trait. It contains <code>GameData</code> as its …",null,null],[11,"on_start","","Executed when the game state begins.",9,[[["statedata",3],["gamedata",3]]]],[11,"on_stop","","Executed when the game state exits.",9,[[["statedata",3],["gamedata",3]]]],[11,"on_pause","","Executed when a different game state is pushed onto the …",9,[[["statedata",3],["gamedata",3]]]],[11,"on_resume","","Executed when the application returns to this game state …",9,[[["statedata",3],["gamedata",3]]]],[11,"handle_event","","Executed on every frame before updating, for use in …",9,[[["statedata",3],["gamedata",3],["stateevent",4]],["simpletrans",6]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals …",9,[[["statedata",3],["gamedata",3]],["simpletrans",6]]],[11,"update","","Executed on every frame immediately, as fast as the …",9,[[["statedata",3]],["simpletrans",6]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals …",9,[[["statedata",3],["gamedata",3]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the …",9,[[["statedata",3],["gamedata",3]]]],[6,"SimpleTrans","","A simple default <code>Trans</code>. Made to be used with <code>SimpleState</code>. …",null,null],[8,"State","","A trait which defines game states that can be used by the …",null,null],[11,"on_start","","Executed when the game state begins.",10,[[["statedata",3]]]],[11,"on_stop","","Executed when the game state exits.",10,[[["statedata",3]]]],[11,"on_pause","","Executed when a different game state is pushed onto the …",10,[[["statedata",3]]]],[11,"on_resume","","Executed when the application returns to this game state …",10,[[["statedata",3]]]],[11,"handle_event","","Executed on every frame before updating, for use in …",10,[[["statedata",3]],["trans",4]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals …",10,[[["statedata",3]],["trans",4]]],[11,"update","","Executed on every frame immediately, as fast as the …",10,[[["statedata",3]],["trans",4]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals …",10,[[["statedata",3]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the …",10,[[["statedata",3]]]],[3,"StateData","","State data encapsulates the data sent to all state …",null,null],[12,"world","","Main <code>World</code>",11,null],[12,"data","","User defined game data",11,null],[4,"Trans","","Types of state transitions. T is the type of shared data …",null,null],[13,"None","","Continue as normal.",12,null],[13,"Pop","","Remove the active state and resume the next state on the …",12,null],[13,"Push","","Pause the active state and push a new state onto the …",12,null],[13,"Switch","","Remove the current state on the stack and insert a …",12,null],[13,"Replace","","Remove all states on the stack and insert a different one.",12,null],[13,"NewStack","","Remove all states on the stack and insert new stack.",12,null],[13,"Sequence","","Execute a series of Trans\'s.",12,null],[13,"Quit","","Stop and remove all states and shut down the engine.",12,null],[6,"TransEvent","","Event queue to trigger state <code>Trans</code> from other places than …",null,null],[4,"StateEvent","","The enum holding the different types of event that can be …",null,null],[13,"Window","","Events sent by the winit window.",13,null],[13,"Ui","","Events sent by the ui system.",13,null],[13,"Input","","Events sent by the input system.",13,null],[11,"new","","Creates a new CoreApplication with the given initial game …",14,[[],[["error",3],["result",4]]]],[11,"build","","Creates a new ApplicationBuilder with the given initial …",14,[[],[["result",4],["applicationbuilder",3],["error",3]]]],[11,"run","","Run the gameloop until the game state indicates that the …",14,[[]]],[11,"new","","Creates a new ApplicationBuilder instance that wraps the …",0,[[["path",3],["asref",8]],[["error",3],["result",4]]]],[11,"register","","Registers a component into the entity-component-system. …",0,[[]]],[11,"with_resource","","Adds the supplied ECS resource which can be accessed from …",0,[[]]],[11,"with_source","","Register an asset store with the loader logic of the …",0,[[]]],[11,"with_default_source","","Registers the default asset store with the loader logic …",0,[[]]],[11,"with_frame_limit","","Sets the maximum frames per second of this game.",0,[[["u32",15],["frameratelimitstrategy",4]]]],[11,"with_frame_limit_config","","Sets the maximum frames per second of this game, based on …",0,[[["frameratelimitconfig",3]]]],[11,"with_fixed_step_length","","Sets the duration between fixed updates, defaults to one …",0,[[["duration",3]]]],[11,"ignore_window_close","","Tells the resulting application window to ignore close …",0,[[["bool",15]]]],[11,"build","","Build an <code>Application</code> object using the <code>ApplicationBuilder</code> …",0,[[],[["coreapplication",3],["error",3],["result",4]]]],[11,"new","","Creates a new <code>CallbackQueue</code>.",15,[[]]],[11,"send_handle","","Creates a new handle that allows sending <code>Callback</code>s to the …",15,[[],[["sender",3],["callback",6]]]],[11,"new","","Create new game data",16,[[["dispatcher",3]]]],[11,"update","","Update game data",16,[[["world",3]]]],[11,"dispose","","Dispose game data, dropping the dispatcher",16,[[["world",3]]]],[11,"new","","Create new builder",17,[[]]],[11,"with_barrier","","Inserts a barrier which assures that all systems added …",17,[[]]],[11,"with","","Adds a given system.",17,[[]]],[11,"with_system_desc","","Adds a system descriptor.",17,[[]]],[11,"with_thread_local","","Add a given thread-local system.",17,[[]]],[11,"with_thread_local_desc","","Add a given thread-local system.",17,[[]]],[11,"with_bundle","","Add a given ECS bundle to the game loop.",17,[[],[["error",3],["result",4]]]],[11,"build_dispatcher","","Instead of using <code>DataInit</code> for constructing <code>GameData</code>, …",17,[[["world",3]],["dispatcher",3]]],[11,"new","","Create a new state data",11,[[["world",3]]]],[11,"on_start","","Executed when the game state begins.",10,[[["statedata",3]]]],[11,"on_stop","","Executed when the game state exits.",10,[[["statedata",3]]]],[11,"on_pause","","Executed when a different game state is pushed onto the …",10,[[["statedata",3]]]],[11,"on_resume","","Executed when the application returns to this game state …",10,[[["statedata",3]]]],[11,"handle_event","","Executed on every frame before updating, for use in …",10,[[["statedata",3]],["trans",4]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals …",10,[[["statedata",3]],["trans",4]]],[11,"update","","Executed on every frame immediately, as fast as the …",10,[[["statedata",3]],["trans",4]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals …",10,[[["statedata",3]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the …",10,[[["statedata",3]]]],[11,"on_start","","Executed when the game state begins.",8,[[["statedata",3]]]],[11,"on_stop","","Executed when the game state exits.",8,[[["statedata",3]]]],[11,"on_pause","","Executed when a different game state is pushed onto the …",8,[[["statedata",3]]]],[11,"on_resume","","Executed when the application returns to this game state …",8,[[["statedata",3]]]],[11,"handle_event","","Executed on every frame before updating, for use in …",8,[[["statedata",3],["stateevent",4]],["emptytrans",6]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals …",8,[[["statedata",3]],["emptytrans",6]]],[11,"update","","Executed on every frame immediately, as fast as the …",8,[[["statedata",3]],["emptytrans",6]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals …",8,[[["statedata",3]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the …",8,[[["statedata",3]]]],[11,"on_start","","Executed when the game state begins.",9,[[["statedata",3],["gamedata",3]]]],[11,"on_stop","","Executed when the game state exits.",9,[[["statedata",3],["gamedata",3]]]],[11,"on_pause","","Executed when a different game state is pushed onto the …",9,[[["statedata",3],["gamedata",3]]]],[11,"on_resume","","Executed when the application returns to this game state …",9,[[["statedata",3],["gamedata",3]]]],[11,"handle_event","","Executed on every frame before updating, for use in …",9,[[["statedata",3],["gamedata",3],["stateevent",4]],["simpletrans",6]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals …",9,[[["statedata",3],["gamedata",3]],["simpletrans",6]]],[11,"update","","Executed on every frame immediately, as fast as the …",9,[[["statedata",3]],["simpletrans",6]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals …",9,[[["statedata",3],["gamedata",3]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the …",9,[[["statedata",3],["gamedata",3]]]],[6,"Application","amethyst","An Application is the root object of the game engine. It …",null,null],[3,"ApplicationBuilder","","<code>ApplicationBuilder</code> is an interface that allows for …",null,null],[12,"world","","Used by bundles to access the world directly",0,null],[3,"CoreApplication","","<code>CoreApplication</code> is the application implementation for the …",null,null],[6,"Callback","","The type of a callback. This is meant to be created from …",null,null],[3,"CallbackQueue","","A simple <code>Callback</code> queue. Using the <code>Sender</code> you can get …",null,null],[3,"Error","","The error type used by Amethyst.",null,null],[8,"DataDispose","","Allow disposing game data with access to world.",null,null],[10,"dispose","","Perform disposal",18,[[["world",3]]]],[8,"DataInit","","Initialise trait for game data",null,null],[10,"build","","Build game data",7,[[["world",3]]]],[3,"GameData","","Default game data.",null,null],[3,"GameDataBuilder","","Builder for default game data",null,null],[5,"start_logger","","Starts a basic logger outputting to stdout with color on …",null,[[["loggerconfig",3]]]],[4,"LogLevelFilter","","An enum representing the available verbosity level …",null,null],[13,"Off","","A level lower than all log levels.",19,null],[13,"Error","","Corresponds to the <code>Error</code> log level.",19,null],[13,"Warn","","Corresponds to the <code>Warn</code> log level.",19,null],[13,"Info","","Corresponds to the <code>Info</code> log level.",19,null],[13,"Debug","","Corresponds to the <code>Debug</code> log level.",19,null],[13,"Trace","","Corresponds to the <code>Trace</code> log level.",19,null],[3,"Logger","","Allows the creation of a custom logger with a set of …",null,null],[3,"LoggerConfig","","Logger configuration object.",null,null],[12,"stdout","","Determines whether to log to the terminal or not.",20,null],[12,"level_filter","","Sets the overarching level filter for the logger.",20,null],[12,"log_file","","If set, enables logging to file at the given path.",20,null],[12,"allow_env_override","","If set, allows the config values to be overriden via the …",20,null],[12,"log_gfx_backend_level","","Sets a different level for gfx_backend if Some",20,null],[12,"log_gfx_rendy_level","","Sets a different level for gfx_rendy if Some",20,null],[12,"module_levels","","Sets the levels for specific modules.",20,null],[4,"StdoutLog","","An enum that contains options for logging to the terminal.",null,null],[13,"Off","","Disables logging to the terminal.",21,null],[13,"Plain","","Enables logging to the terminal without colored output.",21,null],[13,"Colored","","Enables logging to the terminal with colored output on …",21,null],[8,"EmptyState","","An empty <code>State</code> trait. It contains no <code>StateData</code> or custom …",null,null],[11,"on_start","amethyst::prelude","Executed when the game state begins.",8,[[["statedata",3]]]],[11,"on_stop","","Executed when the game state exits.",8,[[["statedata",3]]]],[11,"on_pause","","Executed when a different game state is pushed onto the …",8,[[["statedata",3]]]],[11,"on_resume","","Executed when the application returns to this game state …",8,[[["statedata",3]]]],[11,"handle_event","","Executed on every frame before updating, for use in …",8,[[["statedata",3],["stateevent",4]],["emptytrans",6]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals …",8,[[["statedata",3]],["emptytrans",6]]],[11,"update","","Executed on every frame immediately, as fast as the …",8,[[["statedata",3]],["emptytrans",6]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals …",8,[[["statedata",3]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the …",8,[[["statedata",3]]]],[6,"EmptyTrans","amethyst","An empty <code>Trans</code>. Made to be used with <code>EmptyState</code>.",null,null],[8,"SimpleState","","A simple <code>State</code> trait. It contains <code>GameData</code> as its …",null,null],[11,"on_start","amethyst::prelude","Executed when the game state begins.",9,[[["statedata",3],["gamedata",3]]]],[11,"on_stop","","Executed when the game state exits.",9,[[["statedata",3],["gamedata",3]]]],[11,"on_pause","","Executed when a different game state is pushed onto the …",9,[[["statedata",3],["gamedata",3]]]],[11,"on_resume","","Executed when the application returns to this game state …",9,[[["statedata",3],["gamedata",3]]]],[11,"handle_event","","Executed on every frame before updating, for use in …",9,[[["statedata",3],["gamedata",3],["stateevent",4]],["simpletrans",6]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals …",9,[[["statedata",3],["gamedata",3]],["simpletrans",6]]],[11,"update","","Executed on every frame immediately, as fast as the …",9,[[["statedata",3]],["simpletrans",6]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals …",9,[[["statedata",3],["gamedata",3]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the …",9,[[["statedata",3],["gamedata",3]]]],[6,"SimpleTrans","amethyst","A simple default <code>Trans</code>. Made to be used with <code>SimpleState</code>. …",null,null],[8,"State","","A trait which defines game states that can be used by the …",null,null],[11,"on_start","amethyst::prelude","Executed when the game state begins.",10,[[["statedata",3]]]],[11,"on_stop","","Executed when the game state exits.",10,[[["statedata",3]]]],[11,"on_pause","","Executed when a different game state is pushed onto the …",10,[[["statedata",3]]]],[11,"on_resume","","Executed when the application returns to this game state …",10,[[["statedata",3]]]],[11,"handle_event","","Executed on every frame before updating, for use in …",10,[[["statedata",3]],["trans",4]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals …",10,[[["statedata",3]],["trans",4]]],[11,"update","","Executed on every frame immediately, as fast as the …",10,[[["statedata",3]],["trans",4]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals …",10,[[["statedata",3]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the …",10,[[["statedata",3]]]],[3,"StateData","amethyst","State data encapsulates the data sent to all state …",null,null],[12,"world","","Main <code>World</code>",11,null],[12,"data","","User defined game data",11,null],[3,"StateMachine","","A simple stack-based state machine (pushdown automaton).",null,null],[4,"Trans","","Types of state transitions. T is the type of shared data …",null,null],[13,"None","","Continue as normal.",12,null],[13,"Pop","","Remove the active state and resume the next state on the …",12,null],[13,"Push","","Pause the active state and push a new state onto the …",12,null],[13,"Switch","","Remove the current state on the stack and insert a …",12,null],[13,"Replace","","Remove all states on the stack and insert a different one.",12,null],[13,"NewStack","","Remove all states on the stack and insert new stack.",12,null],[13,"Sequence","","Execute a series of Trans\'s.",12,null],[13,"Quit","","Stop and remove all states and shut down the engine.",12,null],[6,"TransEvent","","Event queue to trigger state <code>Trans</code> from other places than …",null,null],[4,"StateEvent","","The enum holding the different types of event that can be …",null,null],[13,"Window","","Events sent by the winit window.",13,null],[13,"Ui","","Events sent by the ui system.",13,null],[13,"Input","","Events sent by the input system.",13,null],[3,"StateEventReader","","",null,null],[6,"Result","","Convenience alias for use in main functions that uses …",null,null],[11,"from","amethyst::prelude","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_subset","","",0,[[],["option",4]]],[11,"is_in_subset","","",0,[[],["bool",15]]],[11,"to_subset_unchecked","","",0,[[]]],[11,"from_subset","","",0,[[]]],[11,"get_type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"adapt_into_using","","",0,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_subset","","",14,[[],["option",4]]],[11,"is_in_subset","","",14,[[],["bool",15]]],[11,"to_subset_unchecked","","",14,[[]]],[11,"from_subset","","",14,[[]]],[11,"get_type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"adapt_into_using","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_subset","","",15,[[],["option",4]]],[11,"is_in_subset","","",15,[[],["bool",15]]],[11,"to_subset_unchecked","","",15,[[]]],[11,"from_subset","","",15,[[]]],[11,"try_default","","",15,[[],[["result",4],["string",3]]]],[11,"get_type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"adapt_into_using","","",15,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_subset","","",22,[[],["option",4]]],[11,"is_in_subset","","",22,[[],["bool",15]]],[11,"to_subset_unchecked","","",22,[[]]],[11,"from_subset","","",22,[[]]],[11,"try_default","","",22,[[],[["result",4],["string",3]]]],[11,"get_type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"adapt_into_using","","",22,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_subset","","",16,[[],["option",4]]],[11,"is_in_subset","","",16,[[],["bool",15]]],[11,"to_subset_unchecked","","",16,[[]]],[11,"from_subset","","",16,[[]]],[11,"get_type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"adapt_into_using","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_subset","","",17,[[],["option",4]]],[11,"is_in_subset","","",17,[[],["bool",15]]],[11,"to_subset_unchecked","","",17,[[]]],[11,"from_subset","","",17,[[]]],[11,"try_default","","",17,[[],[["result",4],["string",3]]]],[11,"get_type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"adapt_into_using","","",17,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_subset","","",11,[[],["option",4]]],[11,"is_in_subset","","",11,[[],["bool",15]]],[11,"to_subset_unchecked","","",11,[[]]],[11,"from_subset","","",11,[[]]],[11,"get_type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"adapt_into_using","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_subset","","",12,[[],["option",4]]],[11,"is_in_subset","","",12,[[],["bool",15]]],[11,"to_subset_unchecked","","",12,[[]]],[11,"from_subset","","",12,[[]]],[11,"get_type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"adapt_into_using","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_subset","","",13,[[],["option",4]]],[11,"is_in_subset","","",13,[[],["bool",15]]],[11,"to_subset_unchecked","","",13,[[]]],[11,"from_subset","","",13,[[]]],[11,"get_type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"clone_box","","",13,[[]]],[11,"adapt_into_using","","",13,[[]]],[11,"from","amethyst","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_subset","","",19,[[],["option",4]]],[11,"is_in_subset","","",19,[[],["bool",15]]],[11,"to_subset_unchecked","","",19,[[]]],[11,"from_subset","","",19,[[]]],[11,"get_type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"erased_serialize","","",19,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"clone_box","","",19,[[]]],[11,"load","","",19,[[],[["configerror",4],["result",4]]]],[11,"load_bytes","","",19,[[],[["configerror",4],["result",4]]]],[11,"write","","",19,[[],[["configerror",4],["result",4]]]],[11,"adapt_into_using","","",19,[[]]],[11,"equals","","",19,[[["any",8]],["bool",15]]],[11,"as_any","","",19,[[],["any",8]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_subset","","",21,[[],["option",4]]],[11,"is_in_subset","","",21,[[],["bool",15]]],[11,"to_subset_unchecked","","",21,[[]]],[11,"from_subset","","",21,[[]]],[11,"get_type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"erased_serialize","","",21,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"clone_box","","",21,[[]]],[11,"load","","",21,[[],[["configerror",4],["result",4]]]],[11,"load_bytes","","",21,[[],[["configerror",4],["result",4]]]],[11,"write","","",21,[[],[["configerror",4],["result",4]]]],[11,"adapt_into_using","","",21,[[]]],[11,"equals","","",21,[[["any",8]],["bool",15]]],[11,"as_any","","",21,[[],["any",8]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_subset","","",20,[[],["option",4]]],[11,"is_in_subset","","",20,[[],["bool",15]]],[11,"to_subset_unchecked","","",20,[[]]],[11,"from_subset","","",20,[[]]],[11,"try_default","","",20,[[],[["result",4],["string",3]]]],[11,"get_type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"erased_serialize","","",20,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"clone_box","","",20,[[]]],[11,"load","","",20,[[],[["configerror",4],["result",4]]]],[11,"load_bytes","","",20,[[],[["configerror",4],["result",4]]]],[11,"write","","",20,[[],[["configerror",4],["result",4]]]],[11,"adapt_into_using","","",20,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_subset","","",23,[[],["option",4]]],[11,"is_in_subset","","",23,[[],["bool",15]]],[11,"to_subset_unchecked","","",23,[[]]],[11,"from_subset","","",23,[[]]],[11,"get_type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"adapt_into_using","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_subset","","",24,[[],["option",4]]],[11,"is_in_subset","","",24,[[],["bool",15]]],[11,"to_subset_unchecked","","",24,[[]]],[11,"from_subset","","",24,[[]]],[11,"get_type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"adapt_into_using","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_subset","","",25,[[],["option",4]]],[11,"is_in_subset","","",25,[[],["bool",15]]],[11,"to_subset_unchecked","","",25,[[]]],[11,"from_subset","","",25,[[]]],[11,"try_default","","",25,[[],[["result",4],["string",3]]]],[11,"get_type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"adapt_into_using","","",25,[[]]],[11,"from","","",26,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_subset","","",26,[[],["option",4]]],[11,"is_in_subset","","",26,[[],["bool",15]]],[11,"to_subset_unchecked","","",26,[[]]],[11,"from_subset","","",26,[[]]],[11,"get_type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"adapt_into_using","","",26,[[]]],[11,"new","amethyst::prelude","",22,[[],["world",3]]],[11,"register","","",22,[[]]],[11,"register_with_storage","","",22,[[]]],[11,"add_resource","","",22,[[]]],[11,"read_component","","",22,[[],[["storage",3],["fetch",3]]]],[11,"write_component","","",22,[[],[["fetchmut",3],["storage",3]]]],[11,"read_resource","","",22,[[],["fetch",3]]],[11,"write_resource","","",22,[[],["fetchmut",3]]],[11,"entities","","",22,[[],[["entitiesres",3],["read",3],["defaultprovider",3]]]],[11,"entities_mut","","",22,[[],[["entitiesres",3],["fetchmut",3]]]],[11,"create_entity","","",22,[[],["entitybuilder",3]]],[11,"create_entity_unchecked","","",22,[[],["entitybuilder",3]]],[11,"create_iter","","",22,[[],["createiter",3]]],[11,"delete_entity","","",22,[[["entity",3]],[["result",4],["wronggeneration",3]]]],[11,"delete_entities","","",22,[[],[["result",4],["wronggeneration",3]]]],[11,"delete_all","","",22,[[]]],[11,"is_alive","","",22,[[["entity",3]],["bool",15]]],[11,"maintain","","",22,[[]]],[11,"delete_components","","",22,[[]]],[11,"default","","",22,[[],["world",3]]],[11,"fmt","amethyst","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",19,[[],["levelfilter",4]]],[11,"hash","","",19,[[]]],[11,"eq","","",19,[[["level",4]],["bool",15]]],[11,"eq","","",19,[[["levelfilter",4]],["bool",15]]],[11,"cmp","","",19,[[["levelfilter",4]],["ordering",4]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deserialize","","",19,[[],[["result",4],["levelfilter",4]]]],[11,"partial_cmp","","",19,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["level",4]],["bool",15]]],[11,"le","","",19,[[["level",4]],["bool",15]]],[11,"gt","","",19,[[["level",4]],["bool",15]]],[11,"ge","","",19,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",19,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["levelfilter",4]],["bool",15]]],[11,"le","","",19,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",19,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",19,[[["levelfilter",4]],["bool",15]]],[11,"from_str","","",19,[[["str",15]],[["result",4],["levelfilter",4]]]],[11,"serialize","","",19,[[],["result",4]]],[11,"from","","",26,[[],["error",3]]],[11,"fmt","","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"build","amethyst::prelude","",17,[[["world",3]],["gamedata",3]]],[11,"dispose","","",16,[[["world",3]]]],[11,"clone","amethyst","",21,[[],["stdoutlog",4]]],[11,"clone","","",20,[[],["loggerconfig",3]]],[11,"clone","amethyst::prelude","",13,[[]]],[11,"default","","",15,[[]]],[11,"default","","",17,[[]]],[11,"default","amethyst","",20,[[]]],[11,"default","","",25,[[],["stateeventreader",3]]],[11,"eq","","",21,[[["stdoutlog",4]],["bool",15]]],[11,"fmt","amethyst::prelude","",14,[[["formatter",3]],["result",6]]],[11,"fmt","amethyst","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","amethyst::prelude","",12,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","amethyst","",24,[[["formatter",3]],["result",6]]],[11,"fmt","amethyst::prelude","",13,[[["formatter",3]],["result",6]]],[11,"deserialize","amethyst","",21,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"read","","",25,[[["vec",3]]]],[11,"setup","","",25,[[["world",3]]]],[11,"empty","amethyst::prelude","Creates a new, empty resource container.",22,[[],["world",3]]],[11,"insert","","Inserts a resource into this container. If the resource …",22,[[]]],[11,"remove","","Removes a resource of type <code>R</code> from the <code>World</code> and returns …",22,[[],["option",4]]],[11,"has_value","","Returns true if the specified resource type <code>R</code> exists in …",22,[[],["bool",15]]],[11,"has_value_raw","","Returns true if the specified resource type exists in <code>self</code>…",22,[[["resourceid",3]],["bool",15]]],[11,"entry","","Returns an entry for the resource with type <code>R</code>.",22,[[],["entry",3]]],[11,"system_data","","Gets <code>SystemData</code> <code>T</code> from the <code>World</code>. This can be used to …",22,[[]]],[11,"setup","","Sets up system data <code>T</code> for fetching afterwards.",22,[[]]],[11,"exec","","Executes <code>f</code> once, right now and with the specified system …",22,[[]]],[11,"fetch","","Fetches the resource with the specified type <code>T</code> or panics …",22,[[],["fetch",3]]],[11,"try_fetch","","Like <code>fetch</code>, but returns an <code>Option</code> instead of inserting a …",22,[[],[["fetch",3],["option",4]]]],[11,"try_fetch_by_id","","Like <code>try_fetch</code>, but fetches the resource by its <code>ResourceId</code>…",22,[[["resourceid",3]],[["fetch",3],["option",4]]]],[11,"fetch_mut","","Fetches the resource with the specified type <code>T</code> mutably.",22,[[],["fetchmut",3]]],[11,"try_fetch_mut","","Like <code>fetch_mut</code>, but returns an <code>Option</code> instead of …",22,[[],[["fetchmut",3],["option",4]]]],[11,"try_fetch_mut_by_id","","Like <code>try_fetch_mut</code>, but fetches the resource by its …",22,[[["resourceid",3]],[["fetchmut",3],["option",4]]]],[11,"insert_by_id","","Internal function for inserting resources, should only be …",22,[[["resourceid",3]]]],[11,"remove_by_id","","Internal function for removing resources, should only be …",22,[[["resourceid",3]],["option",4]]],[11,"try_fetch_internal","","Internal function for fetching resources, should only be …",22,[[["resourceid",3]],[["trustcell",3],["option",4]]]],[11,"get_mut","","Retrieves a resource without fetching, which is cheaper, …",22,[[],["option",4]]],[11,"get_mut_raw","","Retrieves a resource without fetching, which is cheaper, …",22,[[["resourceid",3]],[["resource",8],["option",4]]]],[11,"max","amethyst","Returns the most verbose logging level filter.",19,[[],["levelfilter",4]]],[11,"to_level","","Converts <code>self</code> to the equivalent <code>Level</code>.",19,[[],[["option",4],["level",4]]]],[11,"as_str","","Returns the string representation of the <code>LevelFilter</code>.",19,[[],["str",15]]],[11,"from_config","","Create a new Logger from [<code>LoggerConfig</code>]",23,[[["loggerconfig",3]]]],[11,"from_config_formatter","","Create a new Logger from [<code>LoggerConfig</code>] and a formatter",23,[[["loggerconfig",3]]]],[11,"level_for","","Set individual log levels for modules.",23,[[["levelfilter",4],["cow",4],["into",8]]]],[11,"start","","Starts [<code>Logger</code>] by consuming it.",23,[[]]],[11,"new","","Creates a new state machine with the given initial state.",24,[[["state",8]],["statemachine",3]]],[11,"is_running","","Checks whether the state machine is running.",24,[[],["bool",15]]],[11,"start","","Initializes the state machine.",24,[[["statedata",3]],[["result",4],["stateerror",4]]]],[11,"handle_event","","Passes a single event to the active state to handle.",24,[[["statedata",3]]]],[11,"fixed_update","","Updates the currently active state at a steady, fixed …",24,[[["statedata",3]]]],[11,"update","","Updates the currently active state immediately.",24,[[["statedata",3]]]],[11,"transition","","Performs a state transition. Usually called by update or …",24,[[["trans",4],["statedata",3]]]],[11,"new","","Default constructor for our error types.",26,[[],["error",3]]],[11,"with_source","","Update the source of an error.",26,[[],["error",3]]],[11,"from_string","","Construct a new error from a string.",26,[[],["error",3]]],[11,"backtrace","","Get backtrace.",26,[[],[["option",4],["backtrace",3]]]],[11,"source","","Get the source of the error.",26,[[],[["error",3],["option",4]]]],[11,"causes","","Iterate over all causes, including this one.",26,[[],["causes",3]]],[11,"as_error","","Access the internal <code>std::error::Error</code> as a trait.",26,[[],["error",8]]]],"p":[[3,"ApplicationBuilder"],[8,"Config"],[8,"SystemDesc"],[8,"SystemExt"],[8,"WithNamed"],[8,"Builder"],[8,"WorldExt"],[8,"DataInit"],[8,"EmptyState"],[8,"SimpleState"],[8,"State"],[3,"StateData"],[4,"Trans"],[4,"StateEvent"],[3,"CoreApplication"],[3,"CallbackQueue"],[3,"GameData"],[3,"GameDataBuilder"],[8,"DataDispose"],[4,"LogLevelFilter"],[3,"LoggerConfig"],[4,"StdoutLog"],[3,"World"],[3,"Logger"],[3,"StateMachine"],[3,"StateEventReader"],[3,"Error"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);